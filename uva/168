#include<bits/stdc++.h>
using namespace std;

vector<int>G[300];

bool can[300];
int par[300];
int k;

void dfs(int u,int i)
{
    int v=-1;
    for(auto x:G[u]){
        if(can[x]==false && x!=par[u]){
            v=x;
            break;
        }
    }
    //cout<<(char)v<<' '<<i<<' '<<k<<endl;
    //getchar();
    if(v!=-1){
        if(i==k){
            printf("%c ",(char)u);
            can[u]=1;
            i=0;
        }
        par[v]=u;
        dfs(v,i+1);
    }else{
        printf("/%c\n",(char)u);
    }
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    string str;
    int cnt=1;
    while(getline(cin,str)){

        if(str=="#") return 0;

        int u,v,m=-1,t=-1;
        k=0;

        bool f1=0,f2=1;

        for(int i=0;i<str.size();i++){
            if(f2){
                if(str[i]=='.'){
                    f2=0;
                }else if(str[i]==';'){
                    f1=0;
                }else if(f1==0){
                    u=str[i];
                    f1=1;
                }else if(str[i]!=':'){
                    v=str[i];
                    G[u].push_back(v);
                }
            }else if(str[i]!=' '){
                if(m==-1) m=str[i];
                else if(t==-1) t=str[i];
                else k=k*10+(str[i]-'0');
            }
        }
        par[m]=t;
        dfs(m,1);
        memset(can,0,sizeof can);
        for(int i=0;i<300;i++){
            G[i].clear();
        }
    }
}
