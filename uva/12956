#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod=1000000000+7;


ll fact[102],inv[102];

ll bigmod(ll n,ll p)
{
    if(p==0) return 1ll%mod;
    if(p==1) return n%mod;
    ll re=bigmod(n,p/2)%mod;
    re=(re*re)%mod;
    if(p&1ll){
        re=(re*n)%mod;
    }
    return re;
}

void pre()
{
    fact[0]=1ll;
    for(ll i=1;i<=100;i++){
        fact[i]=(fact[i-1]*i)%mod;
    }
    inv[100]=bigmod(fact[100],mod-2);
    for(ll i=99;i>=0;i--){
        inv[i]=(inv[i+1]*(i+1))%mod;
    }

}

int n,k;

ll dp[102][102];

ll solve(int pos,int baki)
{
    if(pos==0){
        return (baki==0)%mod;
    }

    ll &re=dp[pos][baki];

    if(re!=-1){
        return re;
    }
    re=0ll;

    for(int i=0;i<=baki && i<=k-1;i++){
        re=(re%mod+inv[i]*solve(pos-1,baki-i))%mod;
    }
    return re%mod;
}


int main()
{
    pre();


    while(cin>>n>>k){
        memset(dp,-1,sizeof dp);
        if(n==1){
            cout<<1<<endl;
        }else{
            cout<<(fact[n-2]*solve(n,n-2))%mod<<endl;
        }
    }
}
