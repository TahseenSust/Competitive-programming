#include<bits/stdc++.h>
using namespace std;

#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);
#define endl '\n'
#define EPS 1e-9

typedef long long ll;
typedef pair<int,int> pii;
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ost; // set
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_multiset; // multiset
*/

// direction array
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};

// Bitmask

/*
bool check(int mask,int pos){return mask&(1<<pos);}
int SET(int mask,int pos){return mask|(1<<pos);}
int FLIP(int mask,int pos){return mask^(1<<pos);}
int reset(int mask,int pos){return mask&~(1 << pos);}
*/

double x,y,c;

double solve(double l)
{
    double h1=sqrt(y*y-l*l);
    double h2=sqrt(x*x-l*l);

    return (h1*h2)/(h2+h1);

}

int main()
{


    while(cin>>x>>y>>c){

        double lo=0,hi=min(x,y);
        while(hi-lo>EPS){
            double mid=(lo+hi)/2;
            if(solve(mid)>c){
                lo=mid;
            }else{
                hi=mid;
            }
        }

        cout<<setprecision(3)<<fixed<<lo<<endl;
    }

}
