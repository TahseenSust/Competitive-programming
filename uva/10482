#include<bits/stdc++.h>
using namespace std;

#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);
#define endl '\n'

typedef long long ll;
typedef pair<int,int> pii;
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ost; // set
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_multiset; // multiset
*/

// Bitmask

/*
bool check(int mask,int pos){return mask&(1<<pos);}
int SET(int mask,int pos){return mask|(1<<pos);}
int FLIP(int mask,int pos){return mask^(1<<pos);}
*/

int sum[50],n,w[50];
int dp[35][650][650];
int visit[35][650][650];
int casio=1;
int solve(int i,int a,int b)
{
    int c=sum[i-1]-a-b;
    if(i>n){
        return max({a,b,c})-min({a,b,c});
    }
    int &re=dp[i][a][b];
    int &memo=visit[i][a][b];
    if(memo==casio){
        return re;
    }
    memo=casio;
    re=min({solve(i+1,a,b),solve(i+1,a+w[i],b),solve(i+1,a,b+w[i])});
    return re;
}


int main()
{
    FAST
    int t;
    cin>>t;
    for(int tc=1;tc<=t;tc++){
        cin>>n;
        for(int i=1;i<=n;i++){
            cin>>w[i];
            sum[i]=sum[i-1]+w[i];
        }
        cout<<"Case "<<tc<<": "<<solve(1,0,0)<<endl;
        casio++;
    }
}
