#include<bits/stdc++.h>
using namespace std;

int n;
double p;

double dp[502][502][502];
bool vis[502][502][502];


double solve(int i,int r,int s)
{
    if(i==n){
        return s;
    }
    if(vis[i][r][s]){
        return dp[i][r][s];
    }
    vis[i][r][s]=1;

    double p1,p2;
    p1=p*solve(i+1,r+1,max(s,r+1));
    p2=(1-p)*solve(i+1,0,max(s,r));

    return dp[i][r][s]=p1+p2;
}
int main()
{
    while(cin>>n>>p && n){
        memset(vis,false,sizeof vis);
        cout<<setprecision(6)<<fixed<<solve(0,0,0)<<endl;
    }
}


