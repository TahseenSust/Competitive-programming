#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;

#define INF 1<<8

int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};

int Set(int N,int pos){return N=N | (1<<pos);}
int reset(int N,int pos){return N= N & ~(1<<pos);}
bool check(int N,int pos){return (bool)(N & (1<<pos));}

string s;
int dp[(1<<15)];


int solve(int x)
{
    if(dp[x]!=-1){
        return dp[x];
    }
    int re=0;
    for(int i=12;i>=1;i--){
        re+=check(x,i);
    }
    for(int i=12;i>=2;i--){
        if(check(x,i) && check(x,i-1)){
            if(i<12 && check(x,i+1)==0){
                int k=x;
                k=Set(k,i+1);
                k=reset(k,i-1);
                k=reset(k,i);
//                for(int j=12;j>=1;j--){
//                    cout<<check(k,j);
//                }
//                cout<<endl;
                re=min(re,solve(k));
            }
            if(i>3 && check(x,i-2)==0){
                int k=x;
                k=Set(k,i-2);
                k=reset(k,i);
                k=reset(k,i-1);
//                for(int j=12;j>=1;j--){
//                    cout<<check(k,j);
//                }
//                cout<<endl;
                re=min(re,solve(k));
            }
        }
    }
    return dp[x]=re;
}
int main(){
    //freopen("in.txt","w",stdout);
    int t;
    cin>>t;
    while(t--){
        memset(dp,-1,sizeof dp);
        cin>>s;
        int x=0;
        for(int i=0;i<s.size();i++){
            if(s[i]=='o')
                x=Set(x,s.size()-i);
        }
        cout<<solve(x)<<endl;
    }
}
