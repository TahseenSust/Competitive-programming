/*
problem: https://codeforces.com/problemset/problem/914/F
*/

#include<bits/stdc++.h>
using namespace std;

#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);
#define endl '\n'

typedef long long ll;
typedef pair<int,int> pii;
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ost; // set
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_multiset; // multiset
*/

// Bitmask

/*
bool check(int mask,int pos){return mask&(1<<pos);}
int SET(int mask,int pos){return mask|(1<<pos);}
int FLIP(int mask,int pos){return mask^(1<<pos);}
*/

bitset<100009>pos[30],ans;

int main()
{
    int ty,l,r,q,indx;
    char ch;
    string str,tmp;
    cin>>str>>q;
    for(int i=0;i<str.size();i++){
        pos[str[i]-'a'][i]=1;
    }
    while(q--){
        cin>>ty;
        if(ty==1){
            cin>>indx>>ch;
            indx--;
            pos[str[indx]-'a'][indx]=0;
            pos[ch-'a'][indx]=1;
            //str[indx]=ch;
        }else{
            cin>>l>>r>>tmp;

            int sz=tmp.size();

            if(sz>r-l+1){
                cout<<0<<endl;
                continue;
            }

            ans.set();
            for(int i=0;i<tmp.size();i++){
                ans&=(pos[tmp[i]-'a']>>i);
            }


            int total=(ans>>(l-1)).count()-(ans>>(r-sz+1)).count();

            cout<<total<<endl;

        }

    }

}
