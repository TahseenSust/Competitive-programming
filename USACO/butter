/*
ID: tahseen1
TASK: butter
LANG: C++14
*/


#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int INF=1000000000;

ofstream fout ("butter.out");
ifstream fin ("butter.in");

int n,p,c;
vector<pair<int,int>>G[900];
vector<int>ase;


int djkstra(int s)
{
    int dis[900];
    for(int i=0;i<900;i++){
        dis[i]=INF;
    }
    priority_queue<pair<int,int>>pQ;
    pQ.push({0,s});
    dis[s]=0;
    while(!pQ.empty()){
        int u=pQ.top().second;
        pQ.pop();

        for(int i=0;i<G[u].size();i++){
            int v=G[u][i].first;
            int cost=G[u][i].second;
            if(dis[v]>dis[u]+cost){
                dis[v]=dis[u]+cost;
                pQ.push({-dis[v],v});
            }
        }
    }
    int total=0;
    for(int i=0;i<ase.size();i++){
        total+=dis[ase[i]];
    }
    return total;
}



int main()
{
    //freopen("in.txt","r",stdin);

    fin>>n>>p>>c;
    ase.resize(n);
    for(int i=0;i<n;i++){
        fin>>ase[i];
    }

    int u,v,w;

    for(int i=0;i<c;i++){
        fin>>u>>v>>w;
        G[u].push_back({v,w});
        G[v].push_back({u,w});
    }
    int ans=INT_MAX;
    for(int i=1;i<=p;i++){
        ans=min(ans,djkstra(i));
    }
    fout<<ans<<endl;


}

//3 4 2 1 5 6 7 8
